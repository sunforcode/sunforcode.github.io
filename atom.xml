<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SunYongji</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-06T10:20:05.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>SunYongji</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/04/06/Unity%E5%92%8CXcode%E9%A1%B9%E7%9B%AE%E8%9E%8D%E5%90%88%E5%85%A8%E7%BA%AA%E5%BD%95~/"/>
    <id>http://yoursite.com/2017/04/06/Unity和Xcode项目融合全纪录~/</id>
    <published>2017-04-06T10:20:05.000Z</published>
    <updated>2017-04-06T10:20:05.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Unity和Xcode项目融合全纪录</title>
    <link href="http://yoursite.com/2017/04/06/Unity%E5%92%8CXcode%E9%A1%B9%E7%9B%AE%E8%9E%8D%E5%90%88%E5%85%A8%E7%BA%AA%E5%BD%95/"/>
    <id>http://yoursite.com/2017/04/06/Unity和Xcode项目融合全纪录/</id>
    <published>2017-04-06T10:19:45.000Z</published>
    <updated>2017-04-06T10:20:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unity和Xcode项目融合全记录"><a href="#Unity和Xcode项目融合全记录" class="headerlink" title="Unity和Xcode项目融合全记录"></a>Unity和Xcode项目融合全记录</h1><p>选取的Unity项目为演示demo： vefuriaDemo</p>
<p>选取的Xcode项目为Mrc项目的最近最近一次提交</p>
<p>##第一步 Unity项目的一些设置</p>
<p>将unity项目导出成iOS的原生项目</p>
<p>需要注意的几个地方： </p>
<ul>
<li>在Player Settings 中设置scrit engine</li>
<li>设置unity中是否显示logo和设置自定义启动画面</li>
<li>设置bundleId等操作</li>
<li>设置unity项目支持的旋转方向，最好设置为四个方向都支持，以为2.0项目是支持旋转屏幕的，如果不选择四个方向的话可能出现崩溃的问题</li>
<li>Target SDK 选择是模拟器运行还是真机运行</li>
</ul>
<p>##第二步 开始融合</p>
<h3 id="1-在原生项目中添加unity项目的文件"><a href="#1-在原生项目中添加unity项目的文件" class="headerlink" title="1.在原生项目中添加unity项目的文件"></a>1.在原生项目中添加unity项目的文件</h3><ul>
<li>原项目中创建一个LoadAR的文件夹</li>
<li>将对应的文件拖入到这个文件夹中</li>
<li>MapFileParser.sh 这个文件在项目目录中没有显示，但是要放到LoadAR中</li>
</ul>
<blockquote>
<ul>
<li>导出来的Unity项目的项目结构如图所示，其中 QCAR Vuforia 和 data要用文件夹的形式添加到项目中</li>
<li>Classes和Libraries要用黄色文件夹 group添加到项目中 ，classes文件和原项目中的classes会造成冲突，所以改为UnityClasses，其中classes中文件特别多，拖入的时候会造成卡顿，需要一些耐心</li>
</ul>
</blockquote>
<p>###2.在原生项目中添加对应的框架</p>
<blockquote>
<p>对照着Unity项目中的框架一个个添加</p>
</blockquote>
<p>###3.对应着unity项目修改BuildSettings</p>
<ul>
<li>修改pch文件,将unity中的Prefix.pch中的代码全部复制到自己的E_Publishing_Prefix.pch中</li>
<li>修改Other Linker Flags 将unity中设置复制到原生项目中</li>
<li>write link map file</li>
<li>head search path</li>
<li>libra search path</li>
<li>Other C Flags </li>
<li>C++ language dialect</li>
<li>C++ standard Library</li>
<li>enable C++ runtime Types</li>
<li>enable Object-c extensions</li>
<li>overriding deprecated Objecet-c methods</li>
<li>GCC_USE_INDIRECT_FUNCTION_CALLS</li>
<li>UNITY_RUNTIME_VERSION</li>
<li>UNITY_SCRIPTING_BACKEND</li>
</ul>
<blockquote>
<p>注意修改路径的时候的修改正确</p>
</blockquote>
<p>###4.修改Build Phases</p>
<blockquote>
<p>添加Run Script 对照图修改 注意修改路径 LoadAR</p>
</blockquote>
<p>##第三步 修改编译报错</p>
<p>修改了C++11以后 所有的.mm文件的编译都将变严格,众多类型不匹配的问题需要修改</p>
<ul>
<li>Cannot use ‘@throw’ with Objective-C exceptions disabled</li>
</ul>
<blockquote>
<p>将一步的修改 enable Object-c extensions 改回yes</p>
</blockquote>
<ul>
<li>Unknown type name ‘il2cpp_z_Byte’; did you mean ‘il2cpp_z_uInt’?</li>
</ul>
<blockquote>
<p>直接编译器修改</p>
</blockquote>
<p>##第四步</p>
<h3 id="1-修改main"><a href="#1-修改main" class="headerlink" title="1.修改main"></a>1.修改main</h3><ul>
<li>将unity项目中的maim.mm中的代码全部覆盖到原生项目的main.m中</li>
<li>将main.mm跟项目的关系解除或者直接删了</li>
<li>将main.m改为main.mm</li>
</ul>
<p>##第五步 到此为止 build success</p>
<p>##第六步 修改Unity项目中的部分文件为arc编译(可选)</p>
<blockquote>
<p>在unity项目中的build phases -&gt; compile sources 搜索所有的.m 或者.mm 文件 在原有项目将对应的文件打上 -fobjc-arc</p>
</blockquote>
<p>##第七步  自定义启动unity</p>
<p>到这里就可以在原生项目中直接运行unity的项目了,但是要做到自定启动unity还要做下一步的操作</p>
<p>###1.修改unity界面不自己立即启动</p>
<ul>
<li>在UnityAppController.mm中修改</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">bool</span>	_startUnityScheduled	= <span class="literal">true</span>;<span class="comment">//按照计划表来启动 ,true的话就是按照自定义时刻启动 默认是false</span></div></pre></td></tr></table></figure>
<ul>
<li>添加退出按钮</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">extern</span> <span class="string">"C"</span><span class="comment">//这个方法是在unity中声明的第一帧调用的方法</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">void</span> UpdateFirstFrame() &#123;</div><div class="line">UnityAppController *appController =  (UnityAppController *)[<span class="built_in">UIApplication</span> sharedApplication].delegate;</div><div class="line">[appController addCustomBackToShelf];</div><div class="line">&#125;</div><div class="line"><span class="comment">// 对Unity中的unityToIOS方法进行实现</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>因为不知道怎么直接调用,所以用了这种间接的方法调用加载退出按钮</p>
</blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)addCustomBackToShelf &#123;</div><div class="line"><span class="built_in">UIButton</span> *exitButton  = [[<span class="built_in">UIButton</span> alloc]initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">50</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>)];</div><div class="line">[exitButton setTitle:<span class="string">@"退出"</span> forState:<span class="built_in">UIControlStateNormal</span>];</div><div class="line">[exitButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(didClickExit) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</div><div class="line">[_unityView addSubview:exitButton];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###2.自定义启动画面(自定义rootviewController)<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>)<span class="built_in">UIViewController</span> *nativeRootViewController;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)applicationDidBecomeActive:(<span class="built_in">UIApplication</span>*)application</div><div class="line">&#123;</div><div class="line"></div><div class="line">::printf(<span class="string">"-&gt; applicationDidBecomeActive()\n"</span>);</div><div class="line"></div><div class="line">[<span class="keyword">self</span> removeSnapshotView];</div><div class="line"><span class="comment">//这就话就是自定义启动画面</span></div><div class="line">[<span class="keyword">self</span> addCustomView];</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span>(_unityAppReady)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(UnityIsPaused() &amp;&amp; _wasPausedExternal == <span class="literal">false</span>)</div><div class="line">&#123;</div><div class="line">UnityWillResume();</div><div class="line">UnityPause(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line">UnitySetPlayerFocus(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!_startUnityScheduled)</div><div class="line">&#123;</div><div class="line">_startUnityScheduled = <span class="literal">true</span>;</div><div class="line">[<span class="keyword">self</span> performSelector:<span class="keyword">@selector</span>(startUnity:) withObject:application afterDelay:<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">_didResignActive = <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)addCustomView &#123;</div><div class="line"><span class="comment">//    userInfo = [UserInfo readLastLoginUser];</span></div><div class="line"><span class="keyword">self</span>.window = [[<span class="built_in">UIWindow</span> alloc]initWithFrame:[<span class="built_in">UIScreen</span> mainScreen].bounds];</div><div class="line"><span class="built_in">NSString</span> *storyBoardName =  isPad ? <span class="string">@"Main_iPad"</span>: <span class="string">@"Main_iPhone"</span>;</div><div class="line"></div><div class="line"><span class="built_in">UINavigationController</span> *navigation = [[<span class="built_in">UIStoryboard</span> storyboardWithName:storyBoardName bundle:<span class="literal">nil</span>] instantiateInitialViewController];</div><div class="line"><span class="keyword">self</span>.nativeRootViewController = navigation;</div><div class="line"><span class="keyword">self</span>.window.rootViewController = <span class="keyword">self</span>.nativeRootViewController;</div><div class="line">[<span class="keyword">self</span>.window makeKeyAndVisible];</div><div class="line">_rootController = <span class="keyword">self</span>.nativeRootViewController;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3-自定义启动unity时刻"><a href="#3-自定义启动unity时刻" class="headerlink" title="3.自定义启动unity时刻"></a>3.自定义启动unity时刻</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)startUnity &#123;<span class="comment">//先要在.h中声明</span></div><div class="line"><span class="keyword">if</span> (isFirstStartUnity) &#123;<span class="comment">//第一次启动Unity</span></div><div class="line">[<span class="keyword">self</span> startUnity:[<span class="built_in">UIApplication</span> sharedApplication]];</div><div class="line">isFirstStartUnity = <span class="literal">NO</span>;</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line">_window.rootViewController = _rootController;</div><div class="line">_rootView.hidden = <span class="literal">NO</span>;</div><div class="line">[_window makeKeyAndVisible];</div><div class="line"><span class="keyword">if</span> (_didResignActive) &#123;</div><div class="line">UnityPause(<span class="number">0</span>);</div><div class="line">_didResignActive = <span class="literal">NO</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>退出到自定义界面</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一句话是要在别的控制器知道退出的事件,</span></div><div class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter]postNotificationName:<span class="string">@"exitUnity"</span> object:<span class="literal">nil</span>];</div><div class="line"><span class="comment">//下面是关键代码</span></div><div class="line">UnityPause(<span class="number">1</span>);</div><div class="line">_didResignActive = <span class="literal">YES</span>;</div><div class="line">_window.rootViewController = <span class="keyword">self</span>.nativeRootViewController;</div><div class="line">_rootView.hidden = <span class="literal">YES</span>;</div><div class="line">[_window makeKeyAndVisible];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###4.调用</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//需要把对应的控制器改为.mm</span></div><div class="line"><span class="meta">#import <span class="meta-string">"UnityAppController.h"</span></span></div><div class="line"></div><div class="line">[GetAppController() startUnity];</div></pre></td></tr></table></figure>
<p>#附1: Unity和Xcode项目的互相调用<br>官方的<a href="https://docs.unity3d.com/Manual/PluginsForIOS.html" target="_blank" rel="external">Unity文档</a>.</p>
<p>###1.unity调ios并传值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//unity脚本中的方法声明</div><div class="line">[DllImport (&quot;__Internal&quot;)]</div><div class="line">private static extern string GetIOSParamsFromNative();</div></pre></td></tr></table></figure>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ios中的实现</span></div><div class="line"><span class="comment">//声明</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> unityPath[<span class="number">2048</span>]; </div><div class="line"><span class="keyword">char</span> *unitymsg = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">extern</span> <span class="string">"C"</span></div><div class="line">&#123;</div><div class="line"><span class="comment">// 对Unity中的unityToIOS方法进行实现</span></div><div class="line"><span class="keyword">char</span> * GetIOSParamsFromNative()&#123;        </div><div class="line"><span class="keyword">if</span>(unitymsg == <span class="literal">NULL</span>)</div><div class="line">&#123;</div><div class="line">unitymsg = (<span class="keyword">char</span> *)calloc(<span class="number">1</span>, <span class="number">2048</span>);</div><div class="line">&#125;        </div><div class="line">memset(unitymsg, <span class="number">0</span>, <span class="number">2048</span>);</div><div class="line">strcpy(unitymsg, unityPath);        </div><div class="line"><span class="keyword">return</span> unitymsg;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>这个地方有几个问题要注意</p>
</blockquote>
<ul>
<li>不能直接传string对象,因为这个地方传的是指针,指针传过去了,但是指针对应的内存空间被释放,所以直接传值会报错,上面的方法是一位老司机教导我的<smile></smile></li>
<li>如果在unity中声明了,并不在ios中实现的话会报编译的错误</li>
</ul>
<p>###2.ios调用unity<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UnitySendMessage(&quot;GameObjectName1&quot;, &quot;MethodName1&quot;, &quot;Message to send&quot;);</div></pre></td></tr></table></figure></p>
<blockquote>
<p>第三个参数可以不传</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Unity和Xcode项目融合全记录&quot;&gt;&lt;a href=&quot;#Unity和Xcode项目融合全记录&quot; class=&quot;headerlink&quot; title=&quot;Unity和Xcode项目融合全记录&quot;&gt;&lt;/a&gt;Unity和Xcode项目融合全记录&lt;/h1&gt;&lt;p&gt;选取的Uni
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>动态全局修改屏幕方向</title>
    <link href="http://yoursite.com/2017/03/29/%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E5%B1%8F%E5%B9%95%E6%96%B9%E5%90%91/"/>
    <id>http://yoursite.com/2017/03/29/动态修改屏幕方向/</id>
    <published>2017-03-29T02:11:22.000Z</published>
    <updated>2017-04-05T03:23:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="全局设置控制横竖屏"><a href="#全局设置控制横竖屏" class="headerlink" title="全局设置控制横竖屏"></a>全局设置控制横竖屏</h1><h2 id="设置几个分类"><a href="#设置几个分类" class="headerlink" title="设置几个分类"></a>设置几个分类</h2><ul>
<li>UINavigation+AutoRotation</li>
<li>UITabBarController+ AutoRotation</li>
<li>基类BaseViewcontroller </li>
</ul>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UINavigationController</span> (<span class="title">Auto</span>)</span></div><div class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.topViewController shouldAutorotate];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSUInteger</span>)supportedInterfaceOrientations</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.topViewController supportedInterfaceOrientations];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.topViewController preferredInterfaceOrientationForPresentation];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UITabBarController</span> (<span class="title">Auto</span>)</span></div><div class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.selectedViewController shouldAutorotate];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSUInteger</span>)supportedInterfaceOrientations</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.selectedViewController supportedInterfaceOrientations];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation</div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.selectedViewController preferredInterfaceOrientationForPresentation];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这个是全局的基类controller,这个位置设置了全局的显示</li>
<li>以后的控制器全都继承自这个控制器</li>
<li>然后在特定的控制器中 重写三个方法来控制屏幕的方向显示</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-(<span class="built_in">UIInterfaceOrientationMask</span>)supportedInterfaceOrientations &#123;</div><div class="line"><span class="keyword">return</span>  <span class="built_in">UIInterfaceOrientationMaskPortrait</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation &#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">UIInterfaceOrientationMaskPortrait</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate &#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">NO</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="强制设置某个页面的横竖屏"><a href="#强制设置某个页面的横竖屏" class="headerlink" title="强制设置某个页面的横竖屏"></a>强制设置某个页面的横竖屏</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">[[<span class="built_in">UIDevice</span> currentDevice] setValue:@(<span class="built_in">UIInterfaceOrientationPortrait</span>)  forKey:<span class="string">@"orientation"</span>];</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;全局设置控制横竖屏&quot;&gt;&lt;a href=&quot;#全局设置控制横竖屏&quot; class=&quot;headerlink&quot; title=&quot;全局设置控制横竖屏&quot;&gt;&lt;/a&gt;全局设置控制横竖屏&lt;/h1&gt;&lt;h2 id=&quot;设置几个分类&quot;&gt;&lt;a href=&quot;#设置几个分类&quot; class=&quot;head
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UnityBug</title>
    <link href="http://yoursite.com/2017/02/28/UnityBug/"/>
    <id>http://yoursite.com/2017/02/28/UnityBug/</id>
    <published>2017-02-28T08:04:05.000Z</published>
    <updated>2017-04-05T03:01:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一个Unity的BUG"><a href="#一个Unity的BUG" class="headerlink" title="一个Unity的BUG"></a>一个Unity的BUG</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ProductName was compiled with optimization - stepping may behave oddly; variables may not be available.</div></pre></td></tr></table></figure>
<p>解决方法:<br><img src="http://okzs58u17.bkt.clouddn.com/Snip20170228_5.png" alt="Alt text"> </p>
<ul>
<li><p>修改一: unityVIewControllerBaseIos.mm中的<br>shoulautoRotate 控制了点开摄像头的旋转与否</p>
</li>
<li><p>修改二: 在导出unity工程的时候,要在buildsettig 里面把程序所支持的方向,选为maskall,然后在unity导出的工程中在修改一中的设置为No<br>###<br>if(Event.current.isMouse &amp;&amp; Event.current.type == EventType.MouseDown &amp;&amp; Event.current.clickCount == 2){<br>print(“double click”);<br>MainBody.isKinematic = true;<br>MainBody.GetComponent<boxcollider> ().enabled = false;<br>}<br>###</boxcollider></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一个Unity的BUG&quot;&gt;&lt;a href=&quot;#一个Unity的BUG&quot; class=&quot;headerlink&quot; title=&quot;一个Unity的BUG&quot;&gt;&lt;/a&gt;一个Unity的BUG&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Visual Studio Code运行第一个程序</title>
    <link href="http://yoursite.com/2017/02/14/%E4%BD%BF%E7%94%A8Visual-Studio-Code%E8%BF%90%E8%A1%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2017/02/14/使用Visual-Studio-Code运行第一个程序/</id>
    <published>2017-02-14T06:58:37.000Z</published>
    <updated>2017-02-14T08:06:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="此文记录在第一次使用Visual-Studio-Code直到能在控制台打印出Hello-World的过程和遇到的坑"><a href="#此文记录在第一次使用Visual-Studio-Code直到能在控制台打印出Hello-World的过程和遇到的坑" class="headerlink" title="此文记录在第一次使用Visual Studio Code直到能在控制台打印出Hello World的过程和遇到的坑"></a>此文记录在第一次使用Visual Studio Code直到能在控制台打印出Hello World的过程和遇到的坑</h1><p>##第一步 下载了Visual Studio Code<br>地址: <a href="https://code.visualstudio.com/?wt.mc_id=DX_841432&amp;utm_source=vscom&amp;utm_medium=ms%20web&amp;utm_campaign=VSCOM%20Home" target="_blank" rel="external">https://code.visualstudio.com/?wt.mc_id=DX_841432&amp;utm_source=vscom&amp;utm_medium=ms%20web&amp;utm_campaign=VSCOM%20Home</a><br>直接将下载的app拖入到系统的应用程序列表</p>
<p>##第二步  安装homebrew (一款下载软件的程序吧) 打开终端 运行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ brew update</div><div class="line">$ brew cask install dotnet</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>说白了, 安装 .NET Core 只需要用 brew cask install dotnet , 第一条命令没事都应该运行一下的, 发现有可升级的就运行一下 brew upgrade </p>
<p>##第三步 安装下载.NET Core SDK：<a href="https://go.microsoft.com/fwlink/?LinkID=809124" target="_blank" rel="external">https://go.microsoft.com/fwlink/?LinkID=809124</a></p>
<p>##第四步 安装完成后<br>$ ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/<br>$ ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</p>
<p>#Zsh users may need to symlink the dotnet binary, 能执行 dotnet 命令就不用了<br>$ ln -s /usr/local/share/dotnet/dotnet /usr/local/bin<br>现在就可以执行 dotnet 命令了, 它是你与 .NET Core 交互的门户, 也是一个构建工具.如果不执行这个命令 就会报错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir hwapp</div><div class="line">cd hwapp</div><div class="line">dotnet new</div></pre></td></tr></table></figure>
<p>第一行是创建文件夹 dotnet new 是创建一个新的项目</p>
<p>##第五步 运行Hello World程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dotnet restore</div><div class="line">dotnet run</div></pre></td></tr></table></figure></p>
<p>在VSC中搜索C# 安装相关插件<br><img src="http://okzs58u17.bkt.clouddn.com/VSCSupport.png" alt="Alt text"><br>打开程序后<br><img src="http://okzs58u17.bkt.clouddn.com/VSCOpenPro1Step.png" alt="Alt text"><br>运行<br><img src="http://okzs58u17.bkt.clouddn.com/VSCOpenProject.png" alt="Alt text"> </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;此文记录在第一次使用Visual-Studio-Code直到能在控制台打印出Hello-World的过程和遇到的坑&quot;&gt;&lt;a href=&quot;#此文记录在第一次使用Visual-Studio-Code直到能在控制台打印出Hello-World的过程和遇到的坑&quot; class=&quot;headerlink&quot; title=&quot;此文记录在第一次使用Visual Studio Code直到能在控制台打印出Hello World的过程和遇到的坑&quot;&gt;&lt;/a&gt;此文记录在第一次使用Visual Studio Code直到能在控制台打印出Hello World的过程和遇到的坑&lt;/h1&gt;&lt;p&gt;##第一步 下载了Visual Studio Code&lt;br&gt;地址: &lt;a href=&quot;https://code.visualstudio.com/?wt.mc_id=DX_841432&amp;amp;utm_source=vscom&amp;amp;utm_medium=ms%20web&amp;amp;utm_campaign=VSCOM%20Home&quot;&gt;https://code.visualstudio.com/?wt.mc_id=DX_841432&amp;amp;utm_source=vscom&amp;amp;utm_medium=ms%20web&amp;amp;utm_campaign=VSCOM%20Home&lt;/a&gt;&lt;br&gt;直接将下载的app拖入到系统的应用程序列表&lt;/p&gt;
&lt;p&gt;##第二步  安装homebrew (一款下载软件的程序吧) 打开终端 运行命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ brew update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ brew cask install dotnet&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>测试监控页面</title>
    <link href="http://yoursite.com/2017/02/13/%E6%B5%8B%E8%AF%95%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2017/02/13/测试监控页面/</id>
    <published>2017-02-13T03:19:38.000Z</published>
    <updated>2017-02-13T03:22:53.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"hello,world"</span>);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line
    
    </summary>
    
    
      <category term="监控" scheme="http://yoursite.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>第一个终端的页面</title>
    <link href="http://yoursite.com/2017/02/06/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BB%88%E7%AB%AF%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2017/02/06/第一个终端的页面/</id>
    <published>2017-02-06T08:31:40.000Z</published>
    <updated>2017-02-07T09:44:40.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Movies" scheme="http://yoursite.com/tags/Movies/"/>
    
      <category term="Life" scheme="http://yoursite.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/01/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AAhexo/"/>
    <id>http://yoursite.com/2017/01/22/我的第二个hexo/</id>
    <published>2017-01-22T08:24:59.000Z</published>
    <updated>2017-02-06T07:55:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>我的第二个hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fffgg</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的第二个hexo&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/01/22/My-New-Post/"/>
    <id>http://yoursite.com/2017/01/22/My-New-Post/</id>
    <published>2017-01-22T08:24:59.000Z</published>
    <updated>2017-02-10T10:01:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>hello,Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">自动化的博客</div><div class="line">http://blog.jobbole.com/100744/ 超屌</div><div class="line"></div><div class="line">fffgg</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hello,Hexo&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/01/22/hello-world/"/>
    <id>http://yoursite.com/2017/01/22/hello-world/</id>
    <published>2017-01-22T08:20:05.000Z</published>
    <updated>2017-02-07T10:02:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将Unity导出的在xcode的模拟器中运行</title>
    <link href="http://yoursite.com/2016/05/26/%E4%B8%96%E7%95%8C%E5%92%8C%E5%B9%B3/"/>
    <id>http://yoursite.com/2016/05/26/世界和平/</id>
    <published>2016-05-25T22:00:00.000Z</published>
    <updated>2017-02-14T08:06:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.jianshu.com/p/44d150ec1807" target="_blank" rel="external">http://www.jianshu.com/p/44d150ec1807</a> 简书介绍</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/44d150ec1807&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/44d150ec1807&lt;/a&gt; 简书介绍&lt;/p&gt;

    
    </summary>
    
    
      <category term="unity$ios" scheme="http://yoursite.com/tags/unity-ios/"/>
    
  </entry>
  
</feed>
